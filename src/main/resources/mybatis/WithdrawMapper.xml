<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bh.mall.dao.IWithdrawDAO">
	<resultMap id="withdraw_DB_Result" type="withdraw">
		<result column="code" property="code" />
		<result column="account_number" property="accountNumber" />
		<result column="account_name" property="accountName" />
		<result column="type" property="type" />
		<result column="amount" property="amount" />
		<result column="fee" property="fee" />
		
		<result column="channel_type" property="channelType" />
		<result column="channel_bank" property="channelBank" />
		<result column="pay_card_info" property="payCardInfo" />
		<result column="pay_card_no" property="payCardNo" />
		<result column="status" property="status" />
		<result column="apply_user" property="applyUser" />
		
		<result column="apply_note" property="applyNote" />
		<result column="apply_datetime" property="applyDatetime" />
		<result column="approve_user" property="approveUser" />
		<result column="approve_note" property="approveNote" />
		<result column="approve_datetime" property="approveDatetime" />
		
		<result column="pay_user" property="payUser" />
		<result column="pay_note" property="payNote" />
		<result column="pay_group" property="payGroup" />
		<result column="channel_order" property="channelOrder" />
		<result column="pay_datetime" property="payDatetime" />
		
		<result column="high_user_id" property="highUserId" />
		<result column="is_company_pay" property="isCompanyPay" />
	</resultMap>
	<sql id="where_condition">
		<trim prefix="WHERE" prefixOverrides="AND | OR">
			<if test="code != null and code != '' ">
				AND t.code = #{code}
			</if>
			<if test="accountNumber != null and accountNumber != '' ">
				AND t.account_number = #{accountNumber}
			</if>
			<if test="type != null and type != '' ">
				AND t.type = #{type}
			</if>
			<if test="highUserId != null and highUserId != '' ">
				AND t.high_user_id = #{highUserId}
			</if>
			<if test="accountName != null and accountName != '' ">
				AND t.account_name like "%"#{accountName}"%"
			</if>
			<if test="channelType != null and channelType != '' ">
				AND t.channel_type = #{channelType}
			</if>
			<if test="channelBank != null and channelBank != '' ">
				AND t.channel_bank = #{channelBank}
			</if>
			<if test="payCardNo != null and payCardNo != '' ">
				AND t.pay_card_no = #{payCardNo}
			</if>
			<choose>
				<when test="statusList != null and statusList.size()>0 ">
					AND t.status IN
					<foreach collection="statusList" item="item" index="index" open="(" separator="," close=")">
						#{item}					
					</foreach>
				</when>
				<when test="status != null and status != '' ">
					AND t.status = #{status}
				</when>
			</choose>
			<if test="applyUser != null and applyUser != '' ">
				AND t.apply_user = #{applyUser}
			</if>
			<if test="applyDatetimeStart != null and applyDatetimeStart != '' ">
				<![CDATA[AND t.apply_datetime >= #{applyDatetimeStart}]]>
			</if>
			<if test="applyDatetimeEnd != null and applyDatetimeEnd != '' ">
				<![CDATA[AND t.apply_datetime <= #{applyDatetimeEnd}]]>
			</if>
			<if test="approveUser != null and approveUser != '' ">
				AND t.approve_user = #{approveUser}
			</if>
			
			<if test="approveDatetimeStart != null and approveDatetimeStart != '' ">
				<![CDATA[AND t.approve_datetime >= #{approveDatetimeStart}]]>
			</if>
			<if test="approveDatetimeEnd != null and approveDatetimeEnd != '' ">
				<![CDATA[AND t.approve_datetime <= #{approveDatetimeEnd}]]>
			</if>
			<if test="payUser != null and payUser != '' ">
				AND t.pay_user = #{payUser}
			</if>
			<if test="payGroup != null and payGroup != '' ">
				AND t.pay_group = #{payGroup}
			</if>
			<if test="channelOrder != null and channelOrder != '' ">
				AND t.channel_order = #{channelOrder}
			</if>
			<if test="isCompanyPay != null and isCompanyPay != '' ">
				AND t.is_company_pay = #{isCompanyPay}
			</if>
			
			<if test="payDatetimeStart != null and payDatetimeStart != '' ">
				<![CDATA[AND t.pay_datetime >= #{payDatetimeStart}]]>
			</if>
			<if test="payDatetimeEnd != null and payDatetimeEnd != '' ">
				<![CDATA[AND t.pay_datetime <= #{payDatetimeEnd}]]>
			</if>
		</trim>
	</sql>
	<select id="select_withdraw" parameterType="withdraw" resultMap="withdraw_DB_Result">
		SELECT
		t.code
		,t.account_number
		,t.account_name
		,t.type
		,t.amount
		,t.fee
		
		,t.channel_type
		,t.channel_bank
		,t.pay_card_info
		,t.pay_card_no
		,t.status
		,t.apply_user
		
		,t.apply_note
		,t.apply_datetime
		,t.approve_user
		,t.approve_note
		,t.approve_datetime
		
		,t.pay_user
		,t.pay_note
		,t.pay_group
		,t.channel_order
		,t.pay_datetime
		,t.high_user_id
		,t.is_company_pay
		FROM
		tbh_withdraw t
		<include refid="where_condition" />
		<trim prefix="ORDER BY ">
			<if test="order != null and order != '' ">
				t.${order}
			</if>
		</trim>
	</select>

	<select id="select_withdraw_count" parameterType="withdraw"
		resultType="java.lang.Long">
		SELECT count(1) FROM tbh_withdraw t
		<include refid="where_condition" />
	</select>

	<insert id="insert_withdraw" parameterType="withdraw">
		INSERT INTO
		tbh_withdraw(
		code
		,account_number
		,account_name
		,type
		,amount
		,fee
		
		,channel_type
		,channel_bank
		,pay_card_info
		,pay_card_no
		,status
		,apply_user
		
		,apply_note
		,apply_datetime
		,is_company_pay
		,high_user_id
		)
		VALUES(
		#{code}
		,#{accountNumber}
		,#{accountName}
		,#{type}
		,#{amount}
		,#{fee}
		
		,#{channelType}
		,#{channelBank}
		,#{payCardInfo}
		,#{payCardNo}
		,#{status}
		,#{applyUser}
		
		,#{applyNote}
		,#{applyDatetime}
		,#{isCompanyPay}
		,#{highUserId}
		)
	</insert>

	<update id="approve_order" parameterType="withdraw">
		UPDATE tbh_withdraw
		SET
		status = #{status}
		,approve_user = #{approveUser}
		,approve_note = #{approveNote}
		,approve_datetime = #{approveDatetime}
		WHERE code = #{code}
	</update>
	
	<update id="pay_order" parameterType="withdraw">
		UPDATE tbh_withdraw
		SET
		status = #{status}
		,pay_user = #{payUser}
		,pay_note = #{payNote}
		,pay_group = #{payGroup}
		,channel_order = #{channelOrder}
		,pay_datetime = #{payDatetime}
		WHERE code = #{code}
	</update>
	
	<insert id="insert_back_record" parameterType="withdraw">
		INSERT INTO
		tbh_withdraw(
		code
		,account_number
		,account_name
		,type
		,amount
		
		,channel_type
		,channel_bank
		,pay_card_info
		,pay_card_no
		,status
		,apply_user
		
		,apply_note
		,apply_datetime
		,pay_user
		,pay_datetime
		)
		VALUES(
		#{code}
		,#{accountNumber}
		,#{accountName}
		,#{type}
		,#{amount}
		
		
		,#{channelType}
		,#{channelBank}
		,#{payCardInfo}
		,#{payCardNo}
		,#{status}
		,#{applyUser}
		
		,#{applyNote}
		,#{applyDatetime}
		,#{payUser}
		,#{payDatetime}
		)
	</insert>
</mapper>
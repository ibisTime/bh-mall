<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bh.mall.dao.IAccountDAO">
	<resultMap id="account_DB_Result" type="account">
		<result column="account_number" property="accountNumber" />
		<result column="user_id" property="userId" />
		<result column="real_name" property="realName" />
		<result column="type" property="type" />
		<result column="status" property="status" />
		
		<result column="currency" property="currency" />	
		<result column="amount" property="amount" />
		<result column="frozen_amount" property="frozenAmount" />
		<result column="create_datetime" property="createDatetime" />	
		<result column="last_order" property="lastOrder" />	
	</resultMap>
	<sql id="where_condition">
		<trim prefix="WHERE" prefixOverrides="AND | OR">	
			<if test="accountNumber != null and accountNumber != '' ">
				AND t.account_number = #{accountNumber}
			</if>
			<if test="userId != null and userId != '' ">
				AND t.user_id = #{userId}
			</if>
			<if test="realName != null and realName != '' ">
				AND t.real_name like "%"#{realName}"%"
			</if>
			<choose>
			     <when test='type == "NOT_P"'>
				 	AND t.type not in('P')
				 </when>
				  <when test='type == "P,B"'>
				 	AND t.type IN ('P','B')
				 </when>
				 <otherwise>
					<if test="type != null and type != '' ">
						AND t.type = #{type}
					</if>
				 </otherwise>
			</choose>
			<if test="status != null and status != '' ">
				AND t.status = #{status}
			</if>
			<if test="currency != null and currency != '' ">
				AND t.currency = #{currency}
			</if>
			<if test="createDatetimeStart != null and createDatetimeStart != '' ">
				<![CDATA[AND t.create_datetime >= #{createDatetimeStart}]]>
			</if>
			<if test="createDatetimeEnd != null and createDatetimeEnd != '' ">
				<![CDATA[AND t.create_datetime <= #{createDatetimeEnd}]]>
			</if>
			<if test="lastOrder != null and lastOrder != '' ">
				AND t.last_order = #{lastOrder}
			</if>
		</trim>
	</sql>
	
	<select id="select_account" parameterType="account" resultMap="account_DB_Result">
		SELECT
		t.account_number
		,t.user_id
		,t.real_name
		,t.type
		,t.status
		
		,t.currency
		,t.amount
		,t.frozen_amount
		,t.create_datetime
		,t.last_order
		FROM
		tbh_account t
		<include refid="where_condition"/>
		<trim prefix="ORDER BY ">
			<if test="order != null and order != '' ">
				t.${order}
			</if>
		</trim>
	</select>

	<select id="select_account_count" parameterType="account" resultType="java.lang.Long">
		SELECT count(1) FROM tbh_account t 
		<include refid="where_condition"/>
	</select>

	<insert id="insert_account" parameterType="account">
		INSERT INTO tbh_account(
		account_number
		,user_id
		,real_name
		,type
		,status
		
		,currency
		,amount
		,frozen_amount
		,create_datetime
		)
		VALUES(
		#{accountNumber}
		,#{userId}
		,#{realName}
		,#{type}
		,#{status}
		
		,#{currency}
		,#{amount}
		,#{frozenAmount}
		,#{createDatetime}
		)
	</insert>
	
	<update id="update_account_amount" parameterType="account">
		UPDATE tbh_account
		SET
		amount= #{amount}
		,last_order = #{lastOrder}
		WHERE
		account_number = #{accountNumber}
	</update>
	
	<update id="update_account_realName" parameterType="account">
		UPDATE tbh_account
		SET
		real_name= #{realName}
		WHERE
		user_id = #{userId}	
	</update>
	
	<update id="update_account_status" parameterType="account">
		UPDATE tbh_account
		SET
		status= #{status}
		WHERE
		account_number = #{accountNumber}	
	</update>
	
	<update id="update_frozenAmount" parameterType="account">
		UPDATE tbh_account
		SET
		amount= #{amount}
		,frozen_amount = #{frozenAmount}
		,last_order = #{lastOrder}
		WHERE
		account_number = #{accountNumber}
	</update>
	
	<update id="update_unfrozenAmount" parameterType="account">
		UPDATE tbh_account
		SET
		amount= #{amount}
		,frozen_amount = #{frozenAmount}
		,last_order = #{lastOrder}
		WHERE
		account_number = #{accountNumber}
	</update>
	
	<update id="update_cutFrozenAmount" parameterType="account">
		UPDATE tbh_account
		SET
		frozen_amount = #{frozenAmount}
		WHERE
		account_number = #{accountNumber}
    </update>
</mapper>

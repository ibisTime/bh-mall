<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bh.mall.dao.IInOrderDAO">
	<resultMap id="inOrder_DB_Result" type="inOrder">
		<result column="code" property="code" />
		<result column="product_code" property="productCode" />
		<result column="product_name" property="productName" />
		<result column="specs_code" property="specsCode" />
		<result column="specs_name" property="specsName" />
		
		<result column="pic" property="pic" />
		<result column="quantity" property="quantity" />
		<result column="price" property="price" />
		<result column="to_user_id" property="toUserId" />
		<result column="to_user_name" property="toUserName" />
		
		<result column="level" property="level" />
		<result column="amount" property="amount" />		
		<result column="status" property="status" />
		
		<result column="pay_type" property="payType" />
		<result column="pay_group" property="payGroup" />
		<result column="pay_amount" property="payAmount" />
		<result column="pay_datetime" property="payDatetime" />
		
		<result column="pay_code" property="payCode" />
		<result column="apply_user" property="applyUser" />
		<result column="real_name" property="realName" />
		<result column="team_name" property="teamName" />
		<result column="team_leader" property="teamLeader" />
		
		<result column="apply_datetime" property="applyDatetime" />
		<result column="apply_note" property="applyNote" />
		<result column="approver" property="approver" />
		
		<result column="approve_datetime" property="approveDatetime" />
		<result column="remark" property="remark" />
		<result column="allAmount" property="allAmount" />
		<result column="is_pay" property="isPay" />
	</resultMap>
	
	<sql id="where_condition">
		<trim prefix="WHERE" prefixOverrides="AND | OR">
			<if test="code != null and code != '' ">
				AND t.code = #{code}
			</if>
			<if test="applyUser != null and applyUser != '' ">
				AND t.apply_user = #{applyUser}
			</if>
			<if test="toUserId != null and toUserId != '' ">
				AND t.to_user_id = #{toUserId}
			</if>
			<choose>
				<when test="status != null and status != '' ">
					AND t.status = #{status}
				</when>
				<when test="statusList != null and statusList.size() > 0 ">
					AND t.status IN
					<foreach collection="statusList" index="index" item="item" open="(" separator="," close=")">
						#{item}
					</foreach>
				</when>
				<when test="fialStatus != null and fialStatus > 0 ">
					AND t.status NOT IN
					<foreach collection="fialStatus" index="index" item="item" open="(" separator="," close=")">
						#{item}
					</foreach>
				</when>
			</choose>
			
			<if test="productName != null and productName != '' ">
				AND t.product_name like "%"#{productName}"%" 
			</if>
			<if test="productCode != null and productCode != '' ">
				AND t.product_code = #{productCode} 
			</if>
			<if test="specsCode != null and specsCode != '' ">
				AND t.specs_code = #{specsCode} 
			</if>
			<if test="level != null and level != '' ">
				AND t.level = #{level} 
			</if>
			
			<if test="realName != null and realName != '' ">
				AND t.real_name like "%"#{realName}"%" 
			</if>
			<if test="teamName != null and teamName != '' ">
				AND t.team_name like "%"#{teamName}"%" 
			</if>
			
			<if test="payGroup != null and payGroup != '' ">
				AND t.pay_group  = #{payGroup} 
			</if>
			<if test="isPay != null and isPay != '' ">
				AND t.is_pay  = #{isPay} 
			</if>
			
			
			<if test="startDatetime != null and startDatetime != ''">
				<![CDATA[AND t.apply_datetime >= #{startDatetime} ]]>
			</if>
			<if test="endDatetime != null and endDatetime != ''">
				<![CDATA[AND t.apply_datetime <= #{endDatetime}]]>
			</if>
			
			<if test="payStartDatetime != null and payStartDatetime != ''">
				<![CDATA[AND t.pay_datetime >= #{payStartDatetime} ]]>
			</if>
			<if test="payEndDatetime != null and payEndDatetime != ''">
				<![CDATA[AND t.pay_datetime <= #{payEndDatetime}]]>
			</if>
		</trim>
	</sql>
	
	
	<select id="select_inOrder" parameterType="inOrder" resultMap="inOrder_DB_Result">
		SELECT
		t.code
		,t.product_code
		,t.product_name
		,t.specs_code
		,t.specs_name

		,t.pic
		,t.quantity
		,t.price
		,t.to_user_id
		,t.to_user_name
		
		,t.level
		,t.amount
		
		,t.status
		,t.pay_type
		,t.pay_group
		,t.pay_amount
		,t.pay_datetime
		
		,t.pay_code
		,t.apply_user
		,t.real_name
		,t.team_name
		,t.team_leader
		,t.apply_datetime
		
		,t.apply_note
		,t.approver
		,t.approve_datetime
		,t.remark
		,t.is_pay
		FROM
		tbh_in_order t 
		<include refid="where_condition" />
		<trim prefix="ORDER BY ">
			<if test="order != null and order != '' ">
				t.${order}
			</if>
		</trim>
	</select>
	
	
	<select id="select_count" parameterType="inOrder" resultMap="inOrder_DB_Result">
		SELECT
		t.level
		,t.apply_user
		,SUM(amount) AS allAmount
		FROM
		tbh_in_order t 
		<include refid="where_condition" />
		GROUP BY t.level,t.apply_user,t.level
		ORDER BY t.level
	</select>
	

	<select id="select_inOrder_count" parameterType="inOrder"
		resultType="java.lang.Long">
		SELECT count(1) FROM tbh_in_order t  
		<include refid="where_condition" />
	</select>

	<insert id="insert_inOrder" parameterType="inOrder">
		INSERT INTO
		tbh_in_order(
		code
		,product_code
		,product_name
		,specs_code
		,specs_name

		,pic
		,quantity
		,price
		,to_user_id
		,to_user_name
		
		,level
		,amount

		,status
		,apply_user
		,real_name
		,team_name
		,team_leader
		,apply_datetime
		,apply_note
		,is_pay
		)
		VALUES(
		#{code}
		,#{productCode}
		,#{productName}
		,#{specsCode}
		,#{specsName}

		,#{pic}
		,#{quantity}
		,#{price}
		,#{toUserId}
		,#{toUserName}
		,#{level}
		,#{amount}

		,#{status}
		,#{applyUser}
		,#{realName}
		,#{teamName}
		,#{teamLeader}
		,#{applyDatetime}
		,#{applyNote}
		,#{isPay}
		)
	</insert>

	<update id="pay_inOrder" parameterType="inOrder">
		UPDATE tbh_in_order
		SET
		pay_code = #{pay_code}
		,pay_group = #{pay_group}
		,pay_type = #{pay_type}
		,pay_datetime = #{pay_datetime}
		,pay_amount = #{pay_amount}
		,status = #{status}
		WHERE code = #{code}
	</update>
	

	<update id="approve_inOrder" parameterType="inOrder">
		UPDATE tbh_in_order
		SET
		status = #{status}
		,approver = #{approver}
		,approve_datetime = #{approveDatetime}
		,approve_note = #{approveNote}
		WHERE code = #{code}
	</update>
	
	
	<update id="approve_cancel" parameterType="inOrder">
		UPDATE tbh_in_order
		SET
		status = #{status}
		,approver = #{approver}
		,approve_datetime = #{approveDatetime}
		,remark = #{remark}
		WHERE code = #{code}
	</update>


	<update id="add_payGroup" parameterType="inOrder">
		UPDATE tbh_in_order
		SET
		pay_group = #{payGroup}
		,pay_type = #{payType}
		WHERE code = #{code}
	</update>
	
	<update id="pay_no" parameterType="inOrder">
		UPDATE tbh_inOrder
		SET
		status = #{status}
		,pay_group = #{payGroup}
		,pay_type = #{payType}
		WHERE code = #{code}
	</update>
	
	<update id="update_status" parameterType="inOrder">
		UPDATE tbh_in_order
		SET
		status = #{status}
		
		WHERE code = #{code}
	</update>
	
	<update id="pay_success" parameterType="inOrder">
		UPDATE tbh_in_order
		SET
		status = #{status}
		,pay_type = #{payType}
		,pay_code = #{payCode}
		,pay_group = #{payGroup}
		,pay_amount = #{payAmount}
		,pay_datetime = #{payDatetime}
		WHERE code = #{code}
	</update>
	
	<update id="invalid_inOrder" parameterType="inOrder">
		UPDATE tbh_in_order
		SET
		status = #{status}
		,approver = #{approver}
		,approve_datetime = #{approveDatetime}
		,remark = #{remark}
		WHERE code = #{code}
	</update>
	
	<delete id="delete_inOrder" parameterType="inOrder">
		DELETE FROM
		tbh_in_order
		WHERE
		code = #{code}
	</delete>
	
	<update id="update_payGroup" parameterType="inOrder">
		UPDATE tbh_in_order
		SET
		pay_group = #{payGroup}
		,is_pay = #{isPay}
		WHERE 
		apply_user = #{applyUser}  AND is_pay = '0'
	</update>
	
	<update id="update_isPay" parameterType="inOrder">
		UPDATE tbh_in_order
		SET
		is_pay = #{isPay}
		WHERE 
		code = #{code}
	</update>
</mapper>